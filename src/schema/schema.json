{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/Runbook",
  "definitions": {
    "Runbook": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string",
          "description": "Author name"
        },
        "description": {
          "type": "string",
          "description": "Short description"
        },
        "environment": {
          "anyOf": [
            {
              "$ref": "#/definitions/EnvironmentDesktop"
            },
            {
              "$ref": "#/definitions/EnvironmentSaaS"
            }
          ]
        },
        "spec": {
          "$ref": "#/definitions/Spec",
          "description": "The test specification"
        },
        "version": {
          "type": "string",
          "description": "version number of the document (e.g. 1, 1.1, 0.1.0, 1.2.1 etc.)"
        },
        "props": {
          "$ref": "#/definitions/IProps"
        },
        "debug": {
          "type": "boolean",
          "description": "Emit debug messages"
        }
      },
      "required": [
        "environment",
        "spec"
      ],
      "additionalProperties": false
    },
    "EnvironmentDesktop": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "edition": {
          "type": "string",
          "const": "desktop"
        }
      },
      "required": [
        "host",
        "appId",
        "edition"
      ],
      "additionalProperties": false
    },
    "EnvironmentSaaS": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "edition": {
          "type": "string",
          "const": "saas"
        },
        "authentication": {
          "type": "object",
          "properties": {
            "apiKey": {
              "type": "string"
            }
          },
          "required": [
            "apiKey"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "host",
        "appId",
        "edition"
      ],
      "additionalProperties": false
    },
    "Spec": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/IMeta"
        },
        "data": {
          "$ref": "#/definitions/IData"
        }
      },
      "additionalProperties": false
    },
    "IMeta": {
      "type": "object",
      "properties": {
        "DataModel": {
          "$ref": "#/definitions/IDataModel"
        },
        "Field": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        },
        "Table": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ITable"
          }
        },
        "Variable": {
          "$ref": "#/definitions/IMetaVariable"
        },
        "VizObject": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of object id that should exists in the app"
        },
        "DataConnections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of data connections that should exists"
        },
        "MasterItems": {
          "type": "object",
          "properties": {
            "dimensions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "measures": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "visualizations": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "IDataModel": {
      "type": "object",
      "properties": {
        "Field": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List fields that should be present in the app"
        },
        "Table": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List tables that should be present in the app"
        },
        "SyntheticKeys": {
          "type": "boolean",
          "description": "Are synthetic keys allowed in the data model"
        },
        "AlwaysOneSelected": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of fields that should have always one selected property"
        }
      },
      "additionalProperties": false
    },
    "Field": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the field"
        },
        "count": {
          "type": "number",
          "description": "Count of cardinal/distinct values to compare with"
        },
        "operator": {
          "$ref": "#/definitions/IScalarOperator",
          "description": "Comparison operator",
          "default": "=="
        }
      },
      "required": [
        "name",
        "count"
      ],
      "additionalProperties": false
    },
    "IScalarOperator": {
      "type": "string",
      "enum": [
        "<",
        ">",
        ">=",
        "<=",
        "==",
        "!=",
        "=",
        "<>"
      ]
    },
    "ITable": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the data table"
        },
        "count": {
          "type": "number",
          "description": "Count of rows count to compare with"
        },
        "operator": {
          "$ref": "#/definitions/IScalarOperator",
          "description": "Comparison operator",
          "default": "=="
        }
      },
      "required": [
        "name",
        "count"
      ],
      "additionalProperties": false
    },
    "IMetaVariable": {
      "type": "object",
      "properties": {
        "Exists": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DoNotExists": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "IData": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/TestSuiteDefinition"
      }
    },
    "TestSuiteDefinition": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Descriptions of the tests"
        },
        "selections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISelection"
          },
          "description": "What selections to be applied BEFORE running EACH test case in the group\n\nSelections are applied one after another in order of appearance - first defined, fist selected"
        },
        "properties": {
          "type": "object",
          "properties": {
            "clearAllBeforeEach": {
              "type": "boolean"
            },
            "skip": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "description": "Test group specific properties These properties are applied to ALL test cases inside the group"
        },
        "tests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestCase"
          },
          "description": "List of test cases"
        }
      },
      "required": [
        "tests"
      ],
      "additionalProperties": false
    },
    "ISelection": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "clearAll": {
              "type": "boolean",
              "description": "Clear all selections (perform `clearAll()`)"
            },
            "field": {
              "not": {}
            },
            "values": {
              "not": {}
            },
            "bookmark": {
              "not": {}
            },
            "byName": {
              "not": {}
            }
          },
          "required": [
            "clearAll"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "field": {
              "type": "string",
              "description": "Name of the field to select into"
            },
            "values": {
              "type": "array",
              "items": {
                "type": [
                  "string",
                  "number"
                ]
              },
              "description": "List of values to select.\n\nProvide all values as string (even if the actual values are in number format)!\n\nIf the selection should be applied via expression then start the value with \"=\". e.g. ``` { values: [\"=Only('Test')\"] } ```"
            },
            "clearAll": {
              "not": {}
            },
            "bookmark": {
              "not": {}
            },
            "byName": {
              "not": {}
            }
          },
          "required": [
            "field",
            "values"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "bookmark": {
              "type": "string",
              "description": "NAME of the bookmark to be applied"
            },
            "clearAll": {
              "not": {}
            },
            "field": {
              "not": {}
            },
            "values": {
              "not": {}
            },
            "byName": {
              "not": {}
            }
          },
          "required": [
            "bookmark"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "byName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "NAME of the bookmark to be applied"
            },
            "bookmark": {
              "not": {}
            },
            "clearAll": {
              "not": {}
            },
            "field": {
              "not": {}
            },
            "values": {
              "not": {}
            }
          },
          "required": [
            "byName"
          ],
          "additionalProperties": false
        }
      ]
    },
    "TestCase": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the test case"
        },
        "description": {
          "type": "string",
          "description": "Longer text that describe the purpose of the test case"
        },
        "type": {
          "type": "string",
          "enum": [
            "scalar",
            "list"
          ],
          "description": "What is the type of the test  case"
        },
        "selections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISelection"
          },
          "description": "What selections to be applied before running the test\n\nWARNING: these selections will be applied AFTER the test group selections are applied (if any)"
        },
        "skip": {
          "type": "boolean",
          "description": "If true the test will not be performed"
        },
        "details": {
          "anyOf": [
            {
              "$ref": "#/definitions/IScalar"
            },
            {
              "$ref": "#/definitions/IList"
            },
            {
              "$ref": "#/definitions/ITableTestCase"
            }
          ]
        },
        "options": {
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "tolerance": {
                  "type": "string",
                  "description": "What is the allowed tolerance/deviation between the expression and the result.\n\nEven when \"operator\" property is \"=\" the tolerance will be respected.\n\nFor example: +- 100, +- 5%, 20%, -3%"
                },
                "state": {
                  "type": "string",
                  "description": "In which state the expression to be made. The default option is $"
                }
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "blah": {
                  "type": "string"
                },
                "state": {
                  "type": "string",
                  "description": "In which state the expression to be made. The default option is $"
                }
              },
              "required": [
                "blah"
              ]
            }
          ]
        }
      },
      "required": [
        "name",
        "type",
        "details"
      ],
      "additionalProperties": false
    },
    "IScalar": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Short description"
        },
        "expression": {
          "type": "string",
          "description": "Qlik expression"
        },
        "result": {
          "type": [
            "string",
            "number"
          ],
          "description": "Value to compare\n\nAccept string, number or expression\n\nTo be evaluated as expressions the values should start with =\n\n``` result: 100 result: \"abcd\" result: \"=sum(100)\" ```"
        },
        "operator": {
          "$ref": "#/definitions/IScalarOperator",
          "description": "TBA"
        }
      },
      "required": [
        "expression",
        "operator"
      ],
      "additionalProperties": false
    },
    "IList": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operation": {
          "$ref": "#/definitions/IListOperator"
        }
      },
      "required": [
        "fieldName",
        "values",
        "operation"
      ],
      "additionalProperties": false
    },
    "IListOperator": {
      "type": "string",
      "enum": [
        "present",
        "missing"
      ]
    },
    "ITableTestCase": {
      "type": "object",
      "properties": {
        "dimensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "measures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "result": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {}
          }
        }
      },
      "required": [
        "dimensions",
        "measures",
        "result"
      ],
      "additionalProperties": false
    },
    "IProps": {
      "type": "object",
      "properties": {
        "selections": {
          "$ref": "#/definitions/IPropsSelections",
          "description": "Pre-define selections.\n\nThese selections can be referenced in the tests."
        },
        "variables": {
          "$ref": "#/definitions/IPropsVariables",
          "description": "Define SESSION variables that can be used during the test suite execution.\n\nMake sure that the name of the session variables is not overlapping with an existing document variable"
        }
      },
      "additionalProperties": false
    },
    "IPropsSelections": {
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/IPropsSelection"
        }
      }
    },
    "IPropsSelection": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "byName": {
              "not": {}
            }
          },
          "additionalProperties": false
        },
        {
          "$ref": "#/definitions/Selection"
        },
        {
          "$ref": "#/definitions/SelectionByName"
        }
      ]
    },
    "Selection": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "values": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          ]
        },
        "byName": {
          "not": {}
        }
      },
      "required": [
        "field",
        "values"
      ],
      "additionalProperties": false
    },
    "SelectionByName": {
      "type": "object",
      "properties": {
        "byName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "field": {
          "not": {}
        },
        "values": {
          "not": {}
        }
      },
      "required": [
        "byName"
      ],
      "additionalProperties": false
    },
    "IPropsVariables": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    }
  }
}